{"version":3,"sources":["KeyboardInput.js","App.js","index.js"],"names":["KeyboardInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","calculateValueHandler","calculateValueFunc","bind","assertThisInitialized","state","value","averageTypingRate","keypresses","rateHistory","push","Date","now","length","shift","firstPress","lastPress","typingRate","Math","ceil","reduce","a","b","setState","react_default","createElement","Fragment","htmlFor","id","type","onChange","name","style","position","height","concat","max","apply","toConsumableArray","paddingLeft","width","map","rate","index","key","left","bottom","background","top","Component","App","src_KeyboardInput","ReactDOM","render","src_App","document","getElementById"],"mappings":"yNAyEeA,cArEb,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,sBAAwBP,EAAKQ,mBAAmBC,KAAxBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAE7BA,EAAKW,MAAQ,CACXC,MAAO,EACPC,kBAAmB,GAGrBb,EAAKc,WAAa,GAClBd,EAAKe,YAAc,GAXDf,oFAsBlB,GAPAG,KAAKW,WAAWE,KAAKC,KAAKC,OAGtBf,KAAKW,WAAWK,OAAS,IAC3BhB,KAAKW,WAAWM,QAGdjB,KAAKW,WAAWK,OAAS,EAAG,CAE9B,IAAME,EAAalB,KAAKW,WAAW,GAC7BQ,EAAYnB,KAAKW,WAAWX,KAAKW,WAAWK,OAAS,GAErDI,EAAcpB,KAAKW,WAAWK,QAAUG,EAAYD,GAAe,IAEzElB,KAAKY,YAAYC,KAAKO,GAClBpB,KAAKY,YAAYI,OAAS,IAC5BhB,KAAKY,YAAYK,QAGnB,IAAMP,EAAoBW,KAAKC,KAAKtB,KAAKY,YAAYW,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GAAG,GAAKzB,KAAKY,YAAYI,QAEnGhB,KAAK0B,SAAS,SAAClB,EAAOZ,GACpB,MAAO,CACLa,MAAOC,uCAOb,OACEiB,EAAAH,EAAAI,cAAAD,EAAAH,EAAAK,SAAA,KACEF,EAAAH,EAAAI,cAAA,SAAOE,QAAQ,gBAAf,yBACAH,EAAAH,EAAAI,cAAA,uEACAD,EAAAH,EAAAI,cAAA,SAAOG,GAAG,eAAeC,KAAK,OAAOC,SAAUjC,KAAKI,sBAAuB8B,KAAMlC,KAAKJ,MAAMsC,KAAMzB,MAAOT,KAAKQ,MAAMC,QAEpHkB,EAAAH,EAAAI,cAAA,OAAKO,MAAO,CAAEC,SAAY,WAAYC,OAAA,GAAAC,OAAajB,KAAKC,KAAKD,KAAKkB,IAALC,MAAAnB,KAAIvB,OAAA2C,EAAA,EAAA3C,CAAQE,KAAKY,eAAgB,GAAxD,MAAgE8B,YAAe,OAAQC,MAAS,QAEnI3C,KAAKY,YAAYgC,IAAI,SAACC,EAAMC,GAAP,OACpBnB,EAAAH,EAAAI,cAAA,OAAKmB,IAAKD,EAAOX,MAAO,CAAEC,SAAY,WAAYY,KAAA,GAAAV,OAAmB,EAARQ,EAAX,MAA0BG,OAAU,EAAGN,MAAS,MAAOO,WAAc,QAASb,OAAA,GAAAC,OAAaO,EAAb,WAIlIlB,EAAAH,EAAAI,cAAA,OAAKO,MAAO,CAAEC,SAAY,WAAYe,IAAO,EAAGH,KAAQ,IAAM3B,KAAKC,KAAKD,KAAKkB,IAALC,MAAAnB,KAAIvB,OAAA2C,EAAA,EAAA3C,CAAQE,KAAKY,gBACzFe,EAAAH,EAAAI,cAAA,OAAKO,MAAO,CAAEC,SAAY,WAAYa,OAAU,EAAGD,KAAQ,IAA3D,KAGArB,EAAAH,EAAAI,cAAA,OAAKO,MAAO,CAAEC,SAAY,WAAYc,WAAc,QAASb,OAAU,MAAOM,MAAS,OAAQK,KAAQ,EAAGC,OAAA,GAAAX,OAAatC,KAAKQ,MAAMC,MAAxB,kBAhExF2C,aCWbC,mLARX,OACE1B,EAAAH,EAAAI,cAAAD,EAAAH,EAAAK,SAAA,KACEF,EAAAH,EAAAI,cAAC0B,EAAD,cAJUF,aCClBG,IAASC,OAAO7B,EAAAH,EAAAI,cAAC6B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.765f527c.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass KeyboardInput extends Component {\n\n  constructor (props) {\n    super(props)\n\n    this.calculateValueHandler = this.calculateValueFunc.bind(this)\n\n    this.state = {\n      value: 0,\n      averageTypingRate: 0\n    }\n\n    this.keypresses = []\n    this.rateHistory = []\n  }\n\n  calculateValueFunc () {\n    this.keypresses.push(Date.now())\n\n    // Limit the window to 30 keypresses\n    if (this.keypresses.length > 30) {\n      this.keypresses.shift()\n    }\n\n    if (this.keypresses.length > 1) {\n      // Calculate the letters per minute\n      const firstPress = this.keypresses[0]\n      const lastPress = this.keypresses[this.keypresses.length - 1]\n\n      const typingRate = (this.keypresses.length / (lastPress - firstPress)) * 5000\n\n      this.rateHistory.push(typingRate)\n      if (this.rateHistory.length > 30) {\n        this.rateHistory.shift()\n      }\n\n      const averageTypingRate = Math.ceil(this.rateHistory.reduce((a, b) => a + b, 0) / this.rateHistory.length)\n\n      this.setState((state, props) => {\n        return {\n          value: averageTypingRate\n        }\n      })\n    }\n  }\n\n  render () {\n    return (\n      <>\n        <label htmlFor='angry-typing'>Please enter your age</label>\n        <p>Enter a number by adjusting your typing speed accordingly.</p>\n        <input id='angry-typing' type='text' onChange={this.calculateValueHandler} name={this.props.name} value={this.state.value} />\n\n        <div style={{ 'position': 'relative', 'height': `${Math.ceil(Math.max(...this.rateHistory)) + 15}px`, 'paddingLeft': '30px', 'width': '50%' }}>          \n          {/* Bars */}\n          {this.rateHistory.map((rate, index) => (\n            <div key={index} style={{ 'position': 'absolute', 'left': `${index * 5}px`, 'bottom': 0, 'width': '5px', 'background': 'green', 'height': `${rate}px` }} />\n          ))}\n\n          {/* Min / max indicators */}\n          <div style={{ 'position': 'absolute', 'top': 0, 'left': 0 }}>{Math.ceil(Math.max(...this.rateHistory)) }</div>\n          <div style={{ 'position': 'absolute', 'bottom': 0, 'left': 0 }}>0</div>\n\n          {/* Average line */}\n          <div style={{ 'position': 'absolute', 'background': 'black', 'height': '1px', 'width': '100%', 'left': 0, 'bottom': `${this.state.value}px` }} />\n        </div>\n      </>\n    )\n  }\n}\n\nexport default KeyboardInput\n","import React, { Component } from 'react'\nimport KeyboardInput from './KeyboardInput'\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <KeyboardInput />\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}